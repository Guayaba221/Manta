---

# yamllint disable rule:line-length

# The try-runtime tool expects your local chain's runtime version to match
# the version of the chain that you're testing against. In this case Calamari mainnet.
# That's why this CI workflow has a manual trigger.
name: Execute try-runtime with latest Calamari mainnet state

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:

env:
  AWS_INSTANCE_SSH_PUBLIC_KEY: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPb24HEQ++aNFWaqVyMtIs6GotUB8R+q61XOoI2z6uMj
  AWS_REGION: us-east-1
  AWS_SUBNET_ID: subnet-08c26caf0a52b7c19
  AWS_SECURITY_GROUP_ID: sg-0315bffea9042ac9b
  AWS_INSTANCE_TYPE: c5a.8xlarge
  AWS_INSTANCE_ROOT_VOLUME_SIZE: 32
  AWS_IMAGE_SEARCH_PATTERN: ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*
  AWS_IMAGE_SEARCH_OWNERS: '["099720109477"]'  # canonical

jobs:

  build-node:
    needs:
      - start-node-builder
    runs-on: ${{ needs.start-node-builder.outputs.runner-label }}
    steps:
      -
        uses: actions/checkout@v2

  run-try-runtime:
    name: try-runtime
    needs:
      - start-node-builder
      - build-node
    runs-on: ${{ needs.start-node-builder.outputs.runner-label }}
    strategy:
      matrix:
        runtime:
          -
            name: calamari
    steps:
      - name: Setup Nodejs and npm
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Install Yarn
        run: npm install -g yarn
      - name: Setup Nodejs with yarn caching
        uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: yarn
      - name: Install dependencies
        run: yarn
      -
        run: |
          wget https://github.com/Manta-Network/Manta/releases/download/v3.1.5/manta
          mkdir -p $HOME/.local/bin
          mv manta $HOME/.local/bin/
          chmod +x $HOME/.local/bin/manta
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      -
        uses: actions/checkout@v2
        with:
          repository: Manta-Network/Dev-Tools
          path: dev-tools-calamari
      -
        name: execute try-runtime
        run: |
          cd ${{ github.workspace }}/dev-tools-calamari/check-finalized-block
          yarn install
          yarn build
          latest_hash=$(node get-latest-finalized-header-hash --address=wss://ws.calamari.systems:443)
          $HOME/.local/bin/manta try-runtime --chain calamari-dev on-runtime-upgrade live --at $latest_hash --uri wss://ws.calamari.systems:443

  start-node-builder:
    runs-on: ubuntu-20.04
    outputs:
      runner-label: ${{ steps.start-self-hosted-runner.outputs.runner-label }}
      aws-region: ${{ steps.start-self-hosted-runner.outputs.aws-region }}
      aws-instance-id: ${{ steps.start-self-hosted-runner.outputs.aws-instance-id }}
    steps:
      -
        id: start-self-hosted-runner
        uses: audacious-network/aws-github-runner@v1.0.33
        with:
          mode: start
          github-token: ${{ secrets.GH_SHR_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-instance-ssh-public-key: ${{ env.AWS_INSTANCE_SSH_PUBLIC_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          aws-subnet-id: ${{ env.AWS_SUBNET_ID }}
          aws-security-group-id: ${{ env.AWS_SECURITY_GROUP_ID }}
          aws-instance-type: ${{ env.AWS_INSTANCE_TYPE }}
          aws-instance-root-volume-size: 32
          aws-image-search-pattern: ${{ env.AWS_IMAGE_SEARCH_PATTERN }}
          aws-image-search-owners: ${{ env.AWS_IMAGE_SEARCH_OWNERS }}  # canonical

  stop-node-builder-current:
    needs:
      - start-node-builder
      - build-node
    runs-on: ubuntu-20.04
    if: ${{ always() }}
    steps:
      -
        uses: audacious-network/aws-github-runner@v1.0.33
        with:
          mode: stop
          github-token: ${{ secrets.GH_SHR_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ needs.start-node-builder.outputs.aws-region }}
          runner-label: ${{ needs.start-node-builder.outputs.runner-label }}
          aws-instance-id: ${{ needs.start-node-builder.outputs.aws-instance-id }}

# yamllint enable rule:line-length
