---

# yamllint disable rule:line-length

name: publish draft releases

# yamllint disable-line rule:truthy
on:
  pull_request:
    branches: [manta]
  push:
    branches: [ghzlatarev/bootnodes-test]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

env:
  AWS_INSTANCE_SSH_PUBLIC_KEY: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPb24HEQ++aNFWaqVyMtIs6GotUB8R+q61XOoI2z6uMj
  AWS_REGION: us-east-1
  AWS_SUBNET_ID: subnet-08c26caf0a52b7c19
  AWS_SECURITY_GROUP_ID: sg-0315bffea9042ac9b
  AWS_INSTANCE_TYPE: c5a.8xlarge  # 32 vcpu, 64gb ram, $1.392 hourly
  AWS_INSTANCE_ROOT_VOLUME_SIZE: 32
  AWS_IMAGE_SEARCH_PATTERN: ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*
  AWS_IMAGE_SEARCH_OWNERS: '["099720109477"]'  # canonical

jobs:

  get-rust-versions:
    runs-on: ubuntu-20.04
    container:
      image: paritytech/ci-linux:production
    outputs:
      rustc-stable: ${{ steps.get-rust-versions.outputs.stable }}
      rustc-nightly: ${{ steps.get-rust-versions.outputs.nightly }}
    env:
      CARGO_TERM_COLOR: always
    steps:
      -
        id: get-rust-versions
        run: |
          echo "::set-output name=stable::$(rustc +stable --version)"
          echo "::set-output name=nightly::$(rustc +nightly --version)"

  build-node-current:
    needs: start-node-builder-current
    runs-on: ${{ needs.start-node-builder-current.outputs.runner-label }}
    env:
      CARGO_TERM_COLOR: always
    steps:
      -
        uses: actions/checkout@v2
      -
        name: install sccache

        env:
          SCCACHE_RELEASE_URL: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.2.15
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$SCCACHE_RELEASE_URL/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod +x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      -
        name: cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-
      -
        name: cache sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: /home/runner/.cache/sccache
          key: sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            sccache-
      -
        name: start sccache server
        run: sccache --start-server
      -
        name: init
        run: |
          curl -s https://sh.rustup.rs -sSf | sh -s -- -y
          source ${HOME}/.cargo/env
          rustup toolchain install stable
          rustup toolchain install nightly
          rustup default stable
          rustup target add wasm32-unknown-unknown --toolchain nightly
          cargo +nightly install --git https://github.com/alexcrichton/wasm-gc --force
          rustup update
      -
        name: build
        env:
          RUST_BACKTRACE: full
          RUSTC_WRAPPER: sccache
          SCCACHE_CACHE_SIZE: 2G
          SCCACHE_DIR: /home/runner/.cache/sccache
        run: |
          source ${HOME}/.cargo/env
          cargo build --release --verbose
      -
        name: stop sccache server
        run: sccache --stop-server || true
      -
        name: strip
        run: |
          strip target/release/manta
      -
        name: upload
        uses: actions/upload-artifact@v2
        with:
          name: manta
          path: target/release/manta
      -
        name: upload
        uses: actions/upload-artifact@v2
        with:
          name: config-for-integration-test
          path: .github/resources/config-for-integration-test.json

  start-node-builder-current:
    runs-on: ubuntu-20.04
    outputs:
      runner-label: ${{ steps.start-self-hosted-runner.outputs.runner-label }}
      aws-region: ${{ steps.start-self-hosted-runner.outputs.aws-region }}
      aws-instance-id: ${{ steps.start-self-hosted-runner.outputs.aws-instance-id }}
    steps:
      -
        id: start-self-hosted-runner
        uses: audacious-network/aws-github-runner@v1.0.33
        with:
          mode: start
          github-token: ${{ secrets.GH_SHR_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-instance-ssh-public-key: ${{ env.AWS_INSTANCE_SSH_PUBLIC_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          aws-subnet-id: ${{ env.AWS_SUBNET_ID }}
          aws-security-group-id: ${{ env.AWS_SECURITY_GROUP_ID }}
          aws-instance-type: ${{ env.AWS_INSTANCE_TYPE }}  # 32 vcpu, 64gb ram, $1.392 hourly
          aws-instance-root-volume-size: 32
          aws-image-search-pattern: ${{ env.AWS_IMAGE_SEARCH_PATTERN }}
          aws-image-search-owners: ${{ env.AWS_IMAGE_SEARCH_OWNERS }}  # canonical

  stop-node-builder-current:
    needs:
      - start-node-builder-current
      - build-node-current
    runs-on: ubuntu-20.04
    if: ${{ always() }}
    steps:
      -
        uses: audacious-network/aws-github-runner@v1.0.33
        with:
          mode: stop
          github-token: ${{ secrets.GH_SHR_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ needs.start-node-builder-current.outputs.aws-region }}
          runner-label: ${{ needs.start-node-builder-current.outputs.runner-label }}
          aws-instance-id: ${{ needs.start-node-builder-current.outputs.aws-instance-id }}

  start-docker-image-tester:
    runs-on: ubuntu-20.04
    outputs:
      runner-label: ${{ steps.start-self-hosted-runner.outputs.runner-label }}
      aws-region: ${{ steps.start-self-hosted-runner.outputs.aws-region }}
      aws-instance-id: ${{ steps.start-self-hosted-runner.outputs.aws-instance-id }}
    steps:
      -
        id: start-self-hosted-runner
        uses: audacious-network/aws-github-runner@v1.0.33
        with:
          mode: start
          github-token: ${{ secrets.GH_SHR_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-instance-ssh-public-key: ${{ env.AWS_INSTANCE_SSH_PUBLIC_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          aws-subnet-id: ${{ env.AWS_SUBNET_ID }}
          aws-security-group-id: ${{ env.AWS_SECURITY_GROUP_ID }}
          aws-instance-type: ${{ env.AWS_INSTANCE_TYPE }}  # 32 vcpu, 64gb ram, $1.392 hourly
          aws-instance-root-volume-size: 64
          aws-image-search-pattern: ${{ env.AWS_IMAGE_SEARCH_PATTERN }}
          aws-image-search-owners: ${{ env.AWS_IMAGE_SEARCH_OWNERS }}  # canonical

  docker-image-test:
    needs:
      - build-node-current
      - start-docker-image-tester
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        runtime:
          -
            name: calamari
          # -
          #   name: manta
    steps:
      -
        uses: actions/checkout@v2
      -
        name: fetch manta
        uses: actions/download-artifact@v2
        with:
          name: manta
      -
        name: build docker image
        run: |
          mv manta docker/manta
          cd docker/
          chmod +x manta
          GIT_TAG=${{ github.event.release.tag_name }}
          BINARY_NAME=manta
          ln -s ${{ matrix.runtime.name }}.Dockerfile Dockerfile
          docker build \
            --build-arg PARA_BINARY_REF=${GIT_TAG} \
            --build-arg PARA_BINARY_URL=manta \
            --tag ${{ matrix.runtime.name }}   ./
      -
        name: run docker image
        run: |
          sudo docker run -p 9944:9944 -p 9945:9945 -d ${{ matrix.runtime.name }} --unsafe-ws-external -- --unsafe-ws-external > docker_id.log
          sleep 60
      -
        name: Show log
        run: |
          echo "Get the docker container ID:"
          image_id=`cat docker_id.log`
          echo $image_id
          echo "Adjusting permissions so we can access docker logs..."
          sudo chmod -R +x /var/lib/docker/
          sudo cat /var/lib/docker/containers/${image_id}/${image_id}-json.log
      -
        uses: actions/checkout@v2
        with:
          repository: Manta-Network/Dev-Tools
          path: dev-tools
      -
        name: check if target block is finalized
        run: |
          cd dev-tools/check-finalized-block
          yarn install
          yarn
          node index.js --para_address=ws://127.0.0.1:9944 --relay_address=ws://127.0.0.1:9945 --target_block=6
          echo $?
          if [ $? == 1 ]; then echo "Failed to finalize the target block - 6"; exit 1; fi

  stop-docker-image-tester:
    needs:
      - start-docker-image-tester
      - docker-image-test
    runs-on: ubuntu-20.04
    if: ${{ always() }}
    steps:
      -
        uses: audacious-network/aws-github-runner@v1.0.33
        with:
          mode: stop
          github-token: ${{ secrets.GH_SHR_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ needs.start-docker-image-tester.outputs.aws-region }}
          runner-label: ${{ needs.start-docker-image-tester.outputs.runner-label }}
          aws-instance-id: ${{ needs.start-docker-image-tester.outputs.aws-instance-id }}

# yamllint enable rule:line-length
